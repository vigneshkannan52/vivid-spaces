{"version":3,"sources":["features-timeline/assets/js/moovit_layout1.js"],"names":["$","window","document","timelines","eventsMinDistance","visibleContent","timelineComponents","timelineTotWidth","find","translateValue","getTranslateValue","newContent","Number","css","replace","selectedDate","string","newEvent","next","children","updateFilling","removeClass","updateTimelinePosition","prev","length","parent","eventLeft","eventStyle","timelineWidth","addClass","timelineTranslate","updateOlderEvents","event","eventsWrapper","get","value","getPropertyValue","setTransformValue","translateTimeline","totWidth","getComputedStyle","selectedEvent","eventWidth","filling","i","distanceNorm","Math","round","scaleValue","setTimelineWidth","width","classLeaving","eventsContent","selectedContent","eventDate","data","classEnetering","height","index","selectedContentHeight","prevAll","timelineStyle","attr","one","indexOf","end","nextAll","timeline","element","style","dateComp","each","dateArrays","parseDate","split","daydiff","second","property","minLapse","dates","first","elementInViewport","top","el","offsetTop","offsetWidth","offsetHeight","offsetParent","left","offsetLeft","pageYOffset","innerHeight","pageXOffset","innerWidth","checkMQ","querySelector","this","dateDistances","distance","events","min","Date","push","newDate","apply","timeSpanNorm","totalWidth","eq","timelineLastDate","updateSlide","last","hasClass","on","preventDefault","showNewContent","updateVisibleContent","which","jQuery"],"mappings":"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","file":"moovit_layout1.min.js","sourcesContent":[";(function ($, window, document, undefined) {\n\n\n    let timelines = $('.aheto-timeline--moovit-modern'),\n        eventsMinDistance = 100;\n\n    (timelines.length > 0) && initTimeline(timelines);\n\n\n    function initTimeline(timelines) {\n        timelines.each(function () {\n\n            const timeline = $(this),\n                timelineComponents = {};\n            //cache timeline components\n            timelineComponents['timelineWrapper'] = timeline.find('.aheto-timeline__events-wrapper');\n            timelineComponents['eventsWrapper'] = timelineComponents['timelineWrapper'].children('.aheto-timeline__events');\n            timelineComponents['fillingLine'] = timelineComponents['eventsWrapper'].children('.aheto-timeline__filling-line');\n            timelineComponents['timelineEvents'] = timelineComponents['eventsWrapper'].find('a');\n            timelineComponents['timelineDates'] = parseDate(timelineComponents['timelineEvents']);\n            timelineComponents['eventsMinLapse'] = minLapse(timelineComponents['timelineDates']);\n            timelineComponents['timelineNavigation'] = timeline.find('.aheto-timeline__navigation');\n            timelineComponents['eventsContent'] = timeline.children('.aheto-timeline__events-content');\n\n            //assign a left postion to the single events along the timeline\n            setDatePosition(timelineComponents, eventsMinDistance);\n            //assign a width to the timeline\n            const timelineTotWidth = setTimelineWidth(timelineComponents, eventsMinDistance);\n            //the timeline has been initialize - show it\n            timeline.addClass('loaded');\n\n\n            $(window).on('resize orientationchange', function () {\n\n                const timelineLastDate =  timelineComponents['eventsWrapper'].find('li').last().find('a');\n\n                if(timelineLastDate.hasClass('selected')){\n\n                    updateSlide(timelineComponents, timelineTotWidth, 'next');\n                }\n\n            });\n\n            //detect click on the next arrow\n            timelineComponents['timelineNavigation'].on('click', '.next', function (event) {\n                event.preventDefault();\n                updateSlide(timelineComponents, timelineTotWidth, 'next');\n            });\n            //detect click on the prev arrow\n            timelineComponents['timelineNavigation'].on('click', '.prev', function (event) {\n                event.preventDefault();\n                updateSlide(timelineComponents, timelineTotWidth, 'prev');\n            });\n            //detect click on the a single event - show new event content\n            timelineComponents['eventsWrapper'].on('click', 'a', function (event) {\n                event.preventDefault();\n                timelineComponents['timelineEvents'].removeClass('selected');\n                $(this).addClass('selected');\n                updateOlderEvents($(this));\n                updateFilling($(this), timelineComponents['fillingLine'], timelineTotWidth);\n                updateVisibleContent($(this), timelineComponents['eventsContent']);\n            });\n\n            //on swipe, show next/prev event content\n            timelineComponents['eventsContent'].on('swipeleft', function () {\n                const mq = checkMQ();\n                (mq == 'mobile') && showNewContent(timelineComponents, timelineTotWidth, 'next');\n            });\n            timelineComponents['eventsContent'].on('swiperight', function () {\n                const mq = checkMQ();\n                (mq == 'mobile') && showNewContent(timelineComponents, timelineTotWidth, 'prev');\n            });\n\n            //keyboard navigation\n            $(document).keyup(function (event) {\n                if (event.which == '37' && elementInViewport(timeline.get(0))) {\n                    showNewContent(timelineComponents, timelineTotWidth, 'prev');\n                } else if (event.which == '39' && elementInViewport(timeline.get(0))) {\n                    showNewContent(timelineComponents, timelineTotWidth, 'next');\n                }\n            });\n        });\n    }\n\n    function updateSlide(timelineComponents, timelineTotWidth, string) {\n        //retrieve translateX value of timelineComponents['eventsWrapper']\n        const translateValue = getTranslateValue(timelineComponents['eventsWrapper']),\n            wrapperWidth = Number(timelineComponents['timelineWrapper'].css('width').replace('px', ''));\n        //translate the timeline to the left('next')/right('prev')\n        (string == 'next')\n            ? translateTimeline(timelineComponents, translateValue - wrapperWidth + eventsMinDistance, wrapperWidth - timelineTotWidth)\n            : translateTimeline(timelineComponents, translateValue + wrapperWidth - eventsMinDistance);\n    }\n\n    function showNewContent(timelineComponents, timelineTotWidth, string) {\n        //go from one event to the next/previous one\n        const visibleContent = timelineComponents['eventsContent'].find('.selected'),\n            newContent = (string == 'next') ? visibleContent.next() : visibleContent.prev();\n\n        if (newContent.length > 0) { //if there's a next/prev event - show it\n            const selectedDate = timelineComponents['eventsWrapper'].find('.selected'),\n                newEvent = (string == 'next') ? selectedDate.parent('li').next('li').children('a') : selectedDate.parent('li').prev('li').children('a');\n\n            updateFilling(newEvent, timelineComponents['fillingLine'], timelineTotWidth);\n            updateVisibleContent(newEvent, timelineComponents['eventsContent']);\n            newEvent.addClass('selected');\n            selectedDate.removeClass('selected');\n            updateOlderEvents(newEvent);\n            updateTimelinePosition(string, newEvent, timelineComponents, timelineTotWidth);\n        }\n    }\n\n    function updateTimelinePosition(string, event, timelineComponents, timelineTotWidth) {\n        //translate timeline to the left/right according to the position of the selected event\n        const eventStyle = window.getComputedStyle(event.get(0), null),\n            eventLeft = Number(eventStyle.getPropertyValue(\"left\").replace('px', '')),\n            timelineWidth = Number(timelineComponents['timelineWrapper'].css('width').replace('px', ''));\n\n        timelineTotWidth = Number(timelineComponents['eventsWrapper'].css('width').replace('px', ''));\n        const timelineTranslate = getTranslateValue(timelineComponents['eventsWrapper']);\n\n        if ((string == 'next' && eventLeft > timelineWidth - timelineTranslate) || (string == 'prev' && eventLeft < -timelineTranslate)) {\n            translateTimeline(timelineComponents, -eventLeft + timelineWidth / 2, timelineWidth - timelineTotWidth);\n        }\n    }\n\n    function translateTimeline(timelineComponents, value, totWidth) {\n        const eventsWrapper = timelineComponents['eventsWrapper'].get(0);\n        value = (value > 0) ? 0 : value; //only negative translate value\n        value = (!(typeof totWidth === 'undefined') && value < totWidth) ? totWidth : value; //do not translate more than timeline width\n        setTransformValue(eventsWrapper, 'translateX', value + 'px');\n        //update navigation arrows visibility\n        (value == 0) ? timelineComponents['timelineNavigation'].find('.prev').addClass('inactive') : timelineComponents['timelineNavigation'].find('.prev').removeClass('inactive');\n        (value == totWidth) ? timelineComponents['timelineNavigation'].find('.next').addClass('inactive') : timelineComponents['timelineNavigation'].find('.next').removeClass('inactive');\n    }\n\n    function updateFilling(selectedEvent, filling, totWidth) {\n        //change .aheto-timeline__filling-line length according to the selected event\n        const eventStyle = window.getComputedStyle(selectedEvent.get(0), null);\n        let eventLeft = eventStyle.getPropertyValue(\"left\");\n        const eventWidth = eventStyle.getPropertyValue(\"width\");\n        eventLeft = Number(eventLeft.replace('px', '')) + Number(eventWidth.replace('px', '')) / 2;\n        const scaleValue = eventLeft / totWidth;\n        setTransformValue(filling.get(0), 'scaleX', scaleValue);\n    }\n\n    function setDatePosition(timelineComponents, min) {\n        for (let i = 0; i < timelineComponents['timelineDates'].length; i++) {\n            const distance = daydiff(timelineComponents['timelineDates'][0], timelineComponents['timelineDates'][i]),\n                distanceNorm = Math.round(distance / timelineComponents['eventsMinLapse']) + 2;\n            timelineComponents['timelineEvents'].eq(i).css('left', distanceNorm * min + 'px');\n        }\n    }\n\n    function setTimelineWidth(timelineComponents, width) {\n        const timeSpan = daydiff(timelineComponents['timelineDates'][0], timelineComponents['timelineDates'][timelineComponents['timelineDates'].length - 1]);\n        let timeSpanNorm = timeSpan / timelineComponents['eventsMinLapse'];\n        timeSpanNorm = Math.round(timeSpanNorm) + 4;\n        const totalWidth = timeSpanNorm * width;\n        timelineComponents['eventsWrapper'].css('width', totalWidth + 'px');\n        updateFilling(timelineComponents['timelineEvents'].eq(0), timelineComponents['fillingLine'], totalWidth);\n\n        return totalWidth;\n    }\n\n    function updateVisibleContent(event, eventsContent) {\n        const eventDate = event.data('date'),\n            visibleContent = eventsContent.find('.selected'),\n            selectedContent = eventsContent.find('[data-date=\"' + eventDate + '\"]'),\n            selectedContentHeight = selectedContent.height();\n        let classEnetering,\n            classLeaving;\n\n        if (selectedContent.index() > visibleContent.index()) {\n            classEnetering = 'selected enter-right';\n            classLeaving = 'leave-left';\n        } else {\n            classEnetering = 'selected enter-left';\n            classLeaving = 'leave-right';\n        }\n\n\n        selectedContent.attr('class', classEnetering);\n        visibleContent.attr('class', classLeaving).one('webkitAnimationEnd oanimationend msAnimationEnd animationend', function () {\n            visibleContent.removeClass('leave-right leave-left');\n            selectedContent.removeClass('enter-left enter-right');\n        });\n        eventsContent.css('height', selectedContentHeight + 'px');\n    }\n\n    function updateOlderEvents(event) {\n        event.parent('li').prevAll('li').children('a').addClass('older-event').end().end().nextAll('li').children('a').removeClass('older-event');\n    }\n\n    function getTranslateValue(timeline) {\n        const timelineStyle = window.getComputedStyle(timeline.get(0), null);\n            let timelineTranslate = timelineStyle.getPropertyValue(\"-webkit-transform\") ||\n                timelineStyle.getPropertyValue(\"-moz-transform\") ||\n                timelineStyle.getPropertyValue(\"-ms-transform\") ||\n                timelineStyle.getPropertyValue(\"-o-transform\") ||\n                timelineStyle.getPropertyValue(\"transform\");\n        let translateValue = 0;\n\n        if (timelineTranslate.indexOf('(') >= 0) {\n             timelineTranslate = timelineTranslate.split('(')[1];\n            timelineTranslate = timelineTranslate.split(')')[0];\n            timelineTranslate = timelineTranslate.split(',');\n             translateValue = timelineTranslate[4];\n        }\n\n\n        return Number(translateValue);\n    }\n\n    function setTransformValue(element, property, value) {\n        element.style[\"-webkit-transform\"] = property + \"(\" + value + \")\";\n        element.style[\"-moz-transform\"] = property + \"(\" + value + \")\";\n        element.style[\"-ms-transform\"] = property + \"(\" + value + \")\";\n        element.style[\"-o-transform\"] = property + \"(\" + value + \")\";\n        element.style[\"transform\"] = property + \"(\" + value + \")\";\n    }\n\n    //based on http://stackoverflow.com/questions/542938/how-do-i-get-the-number-of-days-between-two-dates-in-javascript\n    function parseDate(events) {\n        const dateArrays = [];\n        events.each(function () {\n            const dateComp = $(this).data('date'),\n                newDate = new Date(dateComp);\n            dateArrays.push(newDate);\n\n        });\n        return dateArrays;\n    }\n\n    function daydiff(first, second) {\n        return Math.round((second - first));\n    }\n\n    function minLapse(dates) {\n        //determine the minimum distance among events\n        const dateDistances = [];\n        for (let i = 1; i < dates.length; i++) {\n            const distance = daydiff(dates[i - 1], dates[i]);\n            dateDistances.push(distance);\n        }\n        return Math.min.apply(null, dateDistances);\n    }\n\n    /*\n        How to tell if a DOM element is visible in the current viewport?\n        http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport\n    */\n    function elementInViewport(el) {\n        let top = el.offsetTop;\n        let left = el.offsetLeft;\n        let width = el.offsetWidth;\n        let height = el.offsetHeight;\n\n        while (el.offsetParent) {\n            el = el.offsetParent;\n            top += el.offsetTop;\n            left += el.offsetLeft;\n        }\n\n        return (\n            top < (window.pageYOffset + window.innerHeight) &&\n            left < (window.pageXOffset + window.innerWidth) &&\n            (top + height) > window.pageYOffset &&\n            (left + width) > window.pageXOffset\n        );\n    }\n\n    function checkMQ() {\n        //check if mobile or desktop device\n        return window.getComputedStyle(document.querySelector('.aheto-timeline--moovit-modern'), '::before').getPropertyValue('content').replace(/'/g, \"\").replace(/\"/g, \"\");\n    }\n\n})(jQuery, window, document);"]}