{"version":3,"sources":["features-timeline/assets/js/rela_layout1.js"],"names":["$","window","document","timelines","eventsMinDistance","updateSlide","timelineComponents","timelineTotWidth","string","translateValue","getTranslateValue","wrapperWidth","Number","css","replace","translateTimeline","showNewContent","newContent","visibleContent","next","prev","length","selectedDate","find","newEvent","parent","children","updateVisibleContent","removeClass","updateOlderEvents","updateTimelinePosition","event","eventLeft","eventStyle","getPropertyValue","get","timelineWidth","timelineTranslate","value","totWidth","setTransformValue","addClass","updateFilling","selectedEvent","filling","getComputedStyle","scaleValue","eventWidth","eventDate","eventsContent","classEnetering","selectedContent","selectedContentHeight","height","classLeaving","index","attr","one","timeline","end","nextAll","timelineStyle","indexOf","element","style","split","property","parseDate","events","dateArrays","dateComp","distance","daydiff","second","dateDistances","push","first","elementInViewport","el","offsetParent","left","offsetTop","width","offsetLeft","offsetHeight","top","checkMQ","innerHeight","pageXOffset","innerWidth","pageYOffset","querySelector","initTimeline","this","each","data","round","Date","newDate","apply","i","dates","Math","min","minLapse","setDatePosition","distanceNorm","timeSpan","setTimelineWidth","timeSpanNorm","totalWidth","on","last","hasClass","setTimeout","preventDefault","keyup","which","jQuery"],"mappings":"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","file":"rela_layout1.min.js","sourcesContent":[";(function ($, window, document, undefined) {\n\n    let timelines = $('.aheto-timeline--rela-modern'),\n        eventsMinDistance = 100;\n\n    (timelines.length > 0) && initTimeline(timelines);\n\n\n    function initTimeline(timelines) {\n        timelines.each(function () {\n\n            const timeline = $(this),\n                timelineComponents = {};\n\n            /* cache timeline components */\n            timelineComponents['timelineWrapper'] = timeline.find('.aheto-timeline__events-wrapper');\n            timelineComponents['eventsWrapper'] = timelineComponents['timelineWrapper'].children('.aheto-timeline__events');\n            timelineComponents['fillingLine'] = timelineComponents['eventsWrapper'].children('.aheto-timeline__filling-line');\n            timelineComponents['timelineEvents'] = timelineComponents['eventsWrapper'].find('a');\n            timelineComponents['timelineDates'] = parseDate(timelineComponents['timelineEvents']);\n            timelineComponents['eventsMinLapse'] = minLapse(timelineComponents['timelineDates']);\n            timelineComponents['timelineNavigation'] = timeline.find('.aheto-timeline__navigation');\n            timelineComponents['eventsContent'] = timeline.children('.aheto-timeline__events-content');\n\n\n            /* assign a left postion to the single events along the timeline */\n            setDatePosition(timelineComponents, eventsMinDistance);\n            /* assign a width to the timeline */\n            let timelineTotWidth = setTimelineWidth(timelineComponents, eventsMinDistance);\n\n            /* the timeline has been initialize - show it */\n            timeline.addClass('loaded');\n\n\n            $(window).on('resize orientationchange', function () {\n                const timelineLastDate = timelineComponents['eventsWrapper'].find('li').last().find('a');\n                if (timelineLastDate.hasClass('selected')) {\n                    setTimeout(updateSlide, 100, timelineComponents, timelineTotWidth, 'next');\n                }\n            });\n\n            /* detect click on the next arrow */\n            timelineComponents['timelineNavigation'].on('click', '.next', function (event) {\n                event.preventDefault();\n                updateSlide(timelineComponents, timelineTotWidth, 'next');\n            });\n            /* detect click on the prev arrow */\n            timelineComponents['timelineNavigation'].on('click', '.prev', function (event) {\n                event.preventDefault();\n                updateSlide(timelineComponents, timelineTotWidth, 'prev');\n            });\n            /* detect click on the a single event - show new event content */\n            timelineComponents['eventsWrapper'].on('click', 'a', function (event) {\n                event.preventDefault();\n                timelineComponents['timelineEvents'].removeClass('selected');\n                $(this).addClass('selected');\n                updateOlderEvents($(this));\n                updateFilling($(this), timelineComponents['fillingLine'], timelineTotWidth);\n                updateVisibleContent($(this), timelineComponents['eventsContent']);\n            });\n\n            /* on swipe, show next/prev event content */\n            timelineComponents['eventsContent'].on('swipeleft', function () {\n                const mq = checkMQ();\n                (mq == 'mobile') && showNewContent(timelineComponents, timelineTotWidth, 'next');\n            });\n            timelineComponents['eventsContent'].on('swiperight', function () {\n                const mq = checkMQ();\n                (mq == 'mobile') && showNewContent(timelineComponents, timelineTotWidth, 'prev');\n            });\n\n            /* keyboard navigation */\n            $(document).keyup(function (event) {\n                if (event.which == '37' && elementInViewport(timeline.get(0))) {\n                    showNewContent(timelineComponents, timelineTotWidth, 'prev');\n                } else if (event.which == '39' && elementInViewport(timeline.get(0))) {\n                    showNewContent(timelineComponents, timelineTotWidth, 'next');\n                }\n            });\n        });\n    }\n\n\n    function updateSlide(timelineComponents, timelineTotWidth, string) {\n        /* retrieve translateX value of timelineComponents['eventsWrapper'] */\n        const translateValue = getTranslateValue(timelineComponents['eventsWrapper']),\n            wrapperWidth = Number(timelineComponents['timelineWrapper'].css('width').replace('px', ''));\n        /* translate the timeline to the left('next')/right('prev') */\n        (string == 'next')\n            ? translateTimeline(timelineComponents, translateValue - wrapperWidth + eventsMinDistance, wrapperWidth - timelineTotWidth)\n            : translateTimeline(timelineComponents, translateValue + wrapperWidth - eventsMinDistance);\n    }\n\n    function showNewContent(timelineComponents, timelineTotWidth, string) {\n        /* go from one event to the next/previous one */\n        const visibleContent = timelineComponents['eventsContent'].find('.selected'),\n            newContent = (string == 'next') ? visibleContent.next() : visibleContent.prev();\n\n        if (newContent.length > 0) { /* if there's a next/prev event - show it */\n            const selectedDate = timelineComponents['eventsWrapper'].find('.selected'),\n                newEvent = (string == 'next') ? selectedDate.parent('li').next('li').children('a') : selectedDate.parent('li').prev('li').children('a');\n\n            updateFilling(newEvent, timelineComponents['fillingLine'], timelineTotWidth);\n            updateVisibleContent(newEvent, timelineComponents['eventsContent']);\n            newEvent.addClass('selected');\n            selectedDate.removeClass('selected');\n            updateOlderEvents(newEvent);\n            updateTimelinePosition(string, newEvent, timelineComponents, timelineTotWidth);\n        }\n    }\n\n    function updateTimelinePosition(string, event, timelineComponents, timelineTotWidth) {\n        /* translate timeline to the left/right according to the position of the selected event */\n        const eventStyle = window.getComputedStyle(event.get(0), null),\n            eventLeft = Number(eventStyle.getPropertyValue(\"left\").replace('px', '')),\n            timelineWidth = Number(timelineComponents['timelineWrapper'].css('width').replace('px', ''));\n\n        timelineTotWidth = Number(timelineComponents['eventsWrapper'].css('width').replace('px', ''));\n        const timelineTranslate = getTranslateValue(timelineComponents['eventsWrapper']);\n\n        if ((string == 'next' && eventLeft > timelineWidth - timelineTranslate) || (string == 'prev' && eventLeft < -timelineTranslate)) {\n            translateTimeline(timelineComponents, -eventLeft + timelineWidth / 2, timelineWidth - timelineTotWidth);\n        }\n    }\n\n\n    function translateTimeline(timelineComponents, value, totWidth) {\n        const eventsWrapper = timelineComponents['eventsWrapper'].get(0);\n        value = (value > 0) ? 0 : value; /* only negative translate value */\n        value = (!(typeof totWidth === 'undefined') && value < totWidth) ? totWidth : value; /* do not translate more than timeline width */\n        setTransformValue(eventsWrapper, 'translateX', value + 'px');\n        /* update navigation arrows visibility */\n        (value == 0) ? timelineComponents['timelineNavigation'].find('.prev').addClass('inactive') : timelineComponents['timelineNavigation'].find('.prev').removeClass('inactive');\n        (value == totWidth) ? timelineComponents['timelineNavigation'].find('.next').addClass('inactive') : timelineComponents['timelineNavigation'].find('.next').removeClass('inactive');\n    }\n\n\n    function updateFilling(selectedEvent, filling, totWidth) {\n        /* change .aheto-timeline__filling-line length according to the selected event */\n        const eventStyle = window.getComputedStyle(selectedEvent.get(0), null);\n        let eventLeft = eventStyle.getPropertyValue(\"left\");\n        const eventWidth = eventStyle.getPropertyValue(\"width\");\n        eventLeft = Number(eventLeft.replace('px', '')) + Number(eventWidth.replace('px', '')) / 2;\n        const scaleValue = eventLeft / totWidth;\n        setTransformValue(filling.get(0), 'scaleX', scaleValue);\n    }\n\n    function setDatePosition(timelineComponents, min) {\n        for (let i = 0; i < timelineComponents['timelineDates'].length; i++) {\n            const distance = daydiff(timelineComponents['timelineDates'][0], timelineComponents['timelineDates'][i]),\n                distanceNorm = Math.round(distance / timelineComponents['eventsMinLapse']) + 2;\n            timelineComponents['timelineEvents'].eq(i).css('left', distanceNorm * min + 'px');\n        }\n    }\n\n    function setTimelineWidth(timelineComponents, width) {\n        const timeSpan = daydiff(timelineComponents['timelineDates'][0], timelineComponents['timelineDates'][timelineComponents['timelineDates'].length - 1]);\n        let timeSpanNorm = timeSpan / timelineComponents['eventsMinLapse'];\n        timeSpanNorm = Math.round(timeSpanNorm) + 4;\n        const totalWidth = timeSpanNorm * width;\n        timelineComponents['eventsWrapper'].css('width', totalWidth + 'px');\n        updateFilling(timelineComponents['timelineEvents'].eq(0), timelineComponents['fillingLine'], totalWidth);\n\n        return totalWidth;\n    }\n\n\n    function updateVisibleContent(event, eventsContent) {\n        const eventDate = event.data('date'),\n            visibleContent = eventsContent.find('.selected'),\n            selectedContent = eventsContent.find('[data-date=\"' + eventDate + '\"]'),\n            selectedContentHeight = selectedContent.height();\n        let classEnetering,\n            classLeaving;\n\n        if (selectedContent.index() > visibleContent.index()) {\n            classEnetering = 'selected enter-right';\n            classLeaving = 'leave-left';\n        } else {\n            classEnetering = 'selected enter-left';\n            classLeaving = 'leave-right';\n        }\n\n\n        selectedContent.attr('class', classEnetering);\n        visibleContent.attr('class', classLeaving).one('webkitAnimationEnd oanimationend msAnimationEnd animationend', function () {\n            visibleContent.removeClass('leave-right leave-left');\n            selectedContent.removeClass('enter-left enter-right');\n        });\n        eventsContent.css('height', selectedContentHeight + 'px');\n    }\n\n    function updateOlderEvents(event) {\n        event.parent('li').prevAll('li').children('a').addClass('older-event').end().end().nextAll('li').children('a').removeClass('older-event');\n    }\n\n    function getTranslateValue(timeline) {\n        const timelineStyle = window.getComputedStyle(timeline.get(0), null);\n        let timelineTranslate = timelineStyle.getPropertyValue(\"-webkit-transform\") ||\n            timelineStyle.getPropertyValue(\"-moz-transform\") ||\n            timelineStyle.getPropertyValue(\"-ms-transform\") ||\n            timelineStyle.getPropertyValue(\"-o-transform\") ||\n            timelineStyle.getPropertyValue(\"transform\");\n        let translateValue = 0;\n\n        if (timelineTranslate.indexOf('(') >= 0) {\n            timelineTranslate = timelineTranslate.split('(')[1];\n            timelineTranslate = timelineTranslate.split(')')[0];\n            timelineTranslate = timelineTranslate.split(',');\n            translateValue = timelineTranslate[4];\n        }\n\n\n        return Number(translateValue);\n    }\n\n    function setTransformValue(element, property, value) {\n        element.style[\"-webkit-transform\"] = property + \"(\" + value + \")\";\n        element.style[\"-moz-transform\"] = property + \"(\" + value + \")\";\n        element.style[\"-ms-transform\"] = property + \"(\" + value + \")\";\n        element.style[\"-o-transform\"] = property + \"(\" + value + \")\";\n        element.style[\"transform\"] = property + \"(\" + value + \")\";\n    }\n\n    /* based on http://stackoverflow.com/questions/542938/how-do-i-get-the-number-of-days-between-two-dates-in-javascript */\n    function parseDate(events) {\n        const dateArrays = [];\n        events.each(function () {\n            const dateComp = $(this).data('date'),\n                newDate = new Date(dateComp);\n            dateArrays.push(newDate);\n\n        });\n        return dateArrays;\n    }\n\n\n    function daydiff(first, second) {\n        return Math.round((second - first));\n    }\n\n    function minLapse(dates) {\n        /* determine the minimum distance among events */\n        const dateDistances = [];\n        for (let i = 1; i < dates.length; i++) {\n            const distance = daydiff(dates[i - 1], dates[i]);\n            dateDistances.push(distance);\n        }\n        return Math.min.apply(null, dateDistances);\n    }\n\n    /*\n        How to tell if a DOM element is visible in the current viewport?\n        http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport\n    */\n    function elementInViewport(el) {\n        let top = el.offsetTop;\n        let left = el.offsetLeft;\n        let width = el.offsetWidth;\n        let height = el.offsetHeight;\n\n        while (el.offsetParent) {\n            el = el.offsetParent;\n            top += el.offsetTop;\n            left += el.offsetLeft;\n        }\n\n        return (\n            top < (window.pageYOffset + window.innerHeight) &&\n            left < (window.pageXOffset + window.innerWidth) &&\n            (top + height) > window.pageYOffset &&\n            (left + width) > window.pageXOffset\n        );\n    }\n\n    function checkMQ() {\n        /* check if mobile or desktop device */\n        return window.getComputedStyle(document.querySelector('.aheto-timeline--rela-modern'), '::before').getPropertyValue('content').replace(/'/g, \"\").replace(/\"/g, \"\");\n    }\n})(jQuery, window, document);"]}