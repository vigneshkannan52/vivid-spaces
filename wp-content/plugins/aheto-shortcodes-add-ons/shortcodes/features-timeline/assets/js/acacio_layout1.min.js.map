{"version":3,"sources":["features-timeline/assets/js/acacio_layout1.js"],"names":["$","window","document","timelines","eventsMinDistance","updateSlide","timelineComponents","timelineTotWidth","string","newContent","getTranslateValue","visibleContent","wrapperWidth","Number","css","replace","selectedDate","translateValue","newEvent","next","children","updateOlderEvents","find","updateTimelinePosition","prev","length","parent","eventStyle","getComputedStyle","eventLeft","getPropertyValue","timelineWidth","addClass","timelineTranslate","event","translateTimeline","value","totWidth","eventsWrapper","updateFilling","selectedEvent","eventWidth","get","scaleValue","removeClass","setTransformValue","setDatePosition","distance","daydiff","distanceNorm","filling","classEnetering","eventsContent","classLeaving","data","selectedContent","eventDate","height","index","prevAll","timelineStyle","end","nextAll","timeline","style","property","indexOf","each","dateArrays","parseDate","split","element","first","round","second","minLapse","Math","elementInViewport","el","left","offsetLeft","offsetHeight","offsetParent","top","offsetTop","pageYOffset","innerHeight","pageXOffset","innerWidth","width","checkMQ","querySelector","initTimeline","this","events","dateDistances","push","dateComp","newDate","Date","apply","i","dates","timeSpan","timeSpanNorm","totalWidth","eq","min","updateVisibleContent","selectedContentHeight","setTimelineWidth","timelineLastDate","last","hasClass","preventDefault","on","showNewContent","keyup","jQuery"],"mappings":"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","file":"acacio_layout1.min.js","sourcesContent":[";(function ($, window, document, undefined) {\n\n\n    let timelines = $('.aheto-timeline--acacio-modern'),\n        eventsMinDistance = 100;\n\n    (timelines.length > 0) && initTimeline(timelines);\n\n    function initTimeline(timelines) {\n        timelines.each(function () {\n\n            const timeline = $(this),\n                timelineComponents = {};\n            //cache timeline components\n            timelineComponents['timelineWrapper'] = timeline.find('.aheto-timeline__events-wrapper');\n            timelineComponents['eventsWrapper'] = timelineComponents['timelineWrapper'].children('.aheto-timeline__events');\n            timelineComponents['fillingLine'] = timelineComponents['eventsWrapper'].children('.aheto-timeline__filling-line');\n            timelineComponents['timelineEvents'] = timelineComponents['eventsWrapper'].find('a');\n            timelineComponents['timelineDates'] = parseDate(timelineComponents['timelineEvents']);\n            timelineComponents['eventsMinLapse'] = minLapse(timelineComponents['timelineDates']);\n            timelineComponents['timelineNavigation'] = timeline.find('.aheto-timeline__navigation');\n            timelineComponents['eventsContent'] = timeline.children('.aheto-timeline__events-content');\n\n            //assign a left postion to the single events along the timeline\n            setDatePosition(timelineComponents, eventsMinDistance);\n            //assign a width to the timeline\n            const timelineTotWidth = setTimelineWidth(timelineComponents, eventsMinDistance);\n            //the timeline has been initialize - show it\n            timeline.addClass('loaded');\n\n\n            $(window).on('resize orientationchange', function () {\n\n                const timelineLastDate =  timelineComponents['eventsWrapper'].find('li').last().find('a');\n\n                if(timelineLastDate.hasClass('selected')){\n\n                    updateSlide(timelineComponents, timelineTotWidth, 'next');\n                }\n\n            });\n\n            //detect click on the next arrow\n            timelineComponents['timelineNavigation'].on('click', '.next', function (event) {\n                event.preventDefault();\n                updateSlide(timelineComponents, timelineTotWidth, 'next');\n            });\n            //detect click on the prev arrow\n            timelineComponents['timelineNavigation'].on('click', '.prev', function (event) {\n                event.preventDefault();\n                updateSlide(timelineComponents, timelineTotWidth, 'prev');\n            });\n            //detect click on the a single event - show new event content\n            timelineComponents['eventsWrapper'].on('click', 'a', function (event) {\n                event.preventDefault();\n                timelineComponents['timelineEvents'].removeClass('selected');\n                $(this).addClass('selected');\n                updateOlderEvents($(this));\n                updateFilling($(this), timelineComponents['fillingLine'], timelineTotWidth);\n                updateVisibleContent($(this), timelineComponents['eventsContent']);\n            });\n\n            //on swipe, show next/prev event content\n            timelineComponents['eventsContent'].on('swipeleft', function () {\n                const mq = checkMQ();\n                (mq == 'mobile') && showNewContent(timelineComponents, timelineTotWidth, 'next');\n            });\n            timelineComponents['eventsContent'].on('swiperight', function () {\n                const mq = checkMQ();\n                (mq == 'mobile') && showNewContent(timelineComponents, timelineTotWidth, 'prev');\n            });\n\n            //keyboard navigation\n            $(document).keyup(function (event) {\n                if (event.which == '37' && elementInViewport(timeline.get(0))) {\n                    showNewContent(timelineComponents, timelineTotWidth, 'prev');\n                } else if (event.which == '39' && elementInViewport(timeline.get(0))) {\n                    showNewContent(timelineComponents, timelineTotWidth, 'next');\n                }\n            });\n        });\n    }\n\n    function updateSlide(timelineComponents, timelineTotWidth, string) {\n        //retrieve translateX value of timelineComponents['eventsWrapper']\n        const translateValue = getTranslateValue(timelineComponents['eventsWrapper']),\n            wrapperWidth = Number(timelineComponents['timelineWrapper'].css('width').replace('px', ''));\n        //translate the timeline to the left('next')/right('prev')\n        (string == 'next')\n            ? translateTimeline(timelineComponents, translateValue - wrapperWidth + eventsMinDistance, wrapperWidth - timelineTotWidth)\n            : translateTimeline(timelineComponents, translateValue + wrapperWidth - eventsMinDistance);\n    }\n\n    function showNewContent(timelineComponents, timelineTotWidth, string) {\n        //go from one event to the next/previous one\n        const visibleContent = timelineComponents['eventsContent'].find('.selected'),\n            newContent = (string == 'next') ? visibleContent.next() : visibleContent.prev();\n\n        if (newContent.length > 0) { //if there's a next/prev event - show it\n            const selectedDate = timelineComponents['eventsWrapper'].find('.selected'),\n                newEvent = (string == 'next') ? selectedDate.parent('li').next('li').children('a') : selectedDate.parent('li').prev('li').children('a');\n\n            updateFilling(newEvent, timelineComponents['fillingLine'], timelineTotWidth);\n            updateVisibleContent(newEvent, timelineComponents['eventsContent']);\n            newEvent.addClass('selected');\n            selectedDate.removeClass('selected');\n            updateOlderEvents(newEvent);\n            updateTimelinePosition(string, newEvent, timelineComponents, timelineTotWidth);\n        }\n    }\n\n    function updateTimelinePosition(string, event, timelineComponents, timelineTotWidth) {\n        //translate timeline to the left/right according to the position of the selected event\n        const eventStyle = window.getComputedStyle(event.get(0), null),\n            eventLeft = Number(eventStyle.getPropertyValue(\"left\").replace('px', '')),\n            timelineWidth = Number(timelineComponents['timelineWrapper'].css('width').replace('px', ''));\n\n        timelineTotWidth = Number(timelineComponents['eventsWrapper'].css('width').replace('px', ''));\n        const timelineTranslate = getTranslateValue(timelineComponents['eventsWrapper']);\n\n        if ((string == 'next' && eventLeft > timelineWidth - timelineTranslate) || (string == 'prev' && eventLeft < -timelineTranslate)) {\n            translateTimeline(timelineComponents, -eventLeft + timelineWidth / 2, timelineWidth - timelineTotWidth);\n        }\n    }\n\n    function translateTimeline(timelineComponents, value, totWidth) {\n        const eventsWrapper = timelineComponents['eventsWrapper'].get(0);\n        value = (value > 0) ? 0 : value; //only negative translate value\n        value = (!(typeof totWidth === 'undefined') && value < totWidth) ? totWidth : value; //do not translate more than timeline width\n        setTransformValue(eventsWrapper, 'translateX', value + 'px');\n        //update navigation arrows visibility\n        (value == 0) ? timelineComponents['timelineNavigation'].find('.prev').addClass('inactive') : timelineComponents['timelineNavigation'].find('.prev').removeClass('inactive');\n        (value == totWidth) ? timelineComponents['timelineNavigation'].find('.next').addClass('inactive') : timelineComponents['timelineNavigation'].find('.next').removeClass('inactive');\n    }\n\n    function updateFilling(selectedEvent, filling, totWidth) {\n        //change .aheto-timeline__filling-line length according to the selected event\n        const eventStyle = window.getComputedStyle(selectedEvent.get(0), null);\n        let eventLeft = eventStyle.getPropertyValue(\"left\");\n        const eventWidth = eventStyle.getPropertyValue(\"width\");\n        eventLeft = Number(eventLeft.replace('px', '')) + Number(eventWidth.replace('px', '')) / 2;\n        const scaleValue = eventLeft / totWidth;\n        setTransformValue(filling.get(0), 'scaleX', scaleValue);\n    }\n\n    function setDatePosition(timelineComponents, min) {\n        for (let i = 0; i < timelineComponents['timelineDates'].length; i++) {\n            const distance = daydiff(timelineComponents['timelineDates'][0], timelineComponents['timelineDates'][i]),\n                distanceNorm = Math.round(distance / timelineComponents['eventsMinLapse']) + 2;\n            timelineComponents['timelineEvents'].eq(i).css('left', distanceNorm * min + 'px');\n        }\n    }\n\n    function setTimelineWidth(timelineComponents, width) {\n        const timeSpan = daydiff(timelineComponents['timelineDates'][0], timelineComponents['timelineDates'][timelineComponents['timelineDates'].length - 1]);\n        let timeSpanNorm = timeSpan / timelineComponents['eventsMinLapse'];\n        timeSpanNorm = Math.round(timeSpanNorm) + 4;\n        const totalWidth = timeSpanNorm * width;\n        timelineComponents['eventsWrapper'].css('width', totalWidth + 'px');\n        updateFilling(timelineComponents['timelineEvents'].eq(0), timelineComponents['fillingLine'], totalWidth);\n\n        return totalWidth;\n    }\n\n    function updateVisibleContent(event, eventsContent) {\n        const eventDate = event.data('date'),\n            visibleContent = eventsContent.find('.selected'),\n            selectedContent = eventsContent.find('[data-date=\"' + eventDate + '\"]'),\n            selectedContentHeight = selectedContent.height();\n        let classEnetering,\n            classLeaving;\n\n        if (selectedContent.index() > visibleContent.index()) {\n            classEnetering = 'selected enter-right';\n            classLeaving = 'leave-left';\n        } else {\n            classEnetering = 'selected enter-left';\n            classLeaving = 'leave-right';\n        }\n\n\n        selectedContent.attr('class', classEnetering);\n        visibleContent.attr('class', classLeaving).one('webkitAnimationEnd oanimationend msAnimationEnd animationend', function () {\n            visibleContent.removeClass('leave-right leave-left');\n            selectedContent.removeClass('enter-left enter-right');\n        });\n        eventsContent.css('height', selectedContentHeight + 'px');\n    }\n\n    function updateOlderEvents(event) {\n        event.parent('li').prevAll('li').children('a').addClass('older-event').end().end().nextAll('li').children('a').removeClass('older-event');\n    }\n\n    function getTranslateValue(timeline) {\n        const timelineStyle = window.getComputedStyle(timeline.get(0), null);\n            let timelineTranslate = timelineStyle.getPropertyValue(\"-webkit-transform\") ||\n                timelineStyle.getPropertyValue(\"-moz-transform\") ||\n                timelineStyle.getPropertyValue(\"-ms-transform\") ||\n                timelineStyle.getPropertyValue(\"-o-transform\") ||\n                timelineStyle.getPropertyValue(\"transform\");\n        let translateValue = 0;\n\n        if (timelineTranslate.indexOf('(') >= 0) {\n             timelineTranslate = timelineTranslate.split('(')[1];\n            timelineTranslate = timelineTranslate.split(')')[0];\n            timelineTranslate = timelineTranslate.split(',');\n             translateValue = timelineTranslate[4];\n        }\n\n\n        return Number(translateValue);\n    }\n\n    function setTransformValue(element, property, value) {\n        element.style[\"-webkit-transform\"] = property + \"(\" + value + \")\";\n        element.style[\"-moz-transform\"] = property + \"(\" + value + \")\";\n        element.style[\"-ms-transform\"] = property + \"(\" + value + \")\";\n        element.style[\"-o-transform\"] = property + \"(\" + value + \")\";\n        element.style[\"transform\"] = property + \"(\" + value + \")\";\n    }\n\n    //based on http://stackoverflow.com/questions/542938/how-do-i-get-the-number-of-days-between-two-dates-in-javascript\n    function parseDate(events) {\n        const dateArrays = [];\n        events.each(function () {\n            const dateComp = $(this).data('date'),\n                newDate = new Date(dateComp);\n            dateArrays.push(newDate);\n\n        });\n        return dateArrays;\n    }\n\n    function daydiff(first, second) {\n        return Math.round((second - first));\n    }\n\n    function minLapse(dates) {\n        //determine the minimum distance among events\n        const dateDistances = [];\n        for (let i = 1; i < dates.length; i++) {\n            const distance = daydiff(dates[i - 1], dates[i]);\n            dateDistances.push(distance);\n        }\n        return Math.min.apply(null, dateDistances);\n    }\n\n    /*\n        How to tell if a DOM element is visible in the current viewport?\n        http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport\n    */\n    function elementInViewport(el) {\n        let top = el.offsetTop;\n        let left = el.offsetLeft;\n        let width = el.offsetWidth;\n        let height = el.offsetHeight;\n\n        while (el.offsetParent) {\n            el = el.offsetParent;\n            top += el.offsetTop;\n            left += el.offsetLeft;\n        }\n\n        return (\n            top < (window.pageYOffset + window.innerHeight) &&\n            left < (window.pageXOffset + window.innerWidth) &&\n            (top + height) > window.pageYOffset &&\n            (left + width) > window.pageXOffset\n        );\n    }\n\n    function checkMQ() {\n        //check if mobile or desktop device\n        return window.getComputedStyle(document.querySelector('.aheto-timeline--acacio-modern'), '::before').getPropertyValue('content').replace(/'/g, \"\").replace(/\"/g, \"\");\n    }\n\n})(jQuery, window, document);"]}